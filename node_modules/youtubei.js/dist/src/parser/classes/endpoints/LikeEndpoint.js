var _LikeEndpoint_LIKE_API_PATH, _LikeEndpoint_DISLIKE_API_PATH, _LikeEndpoint_REMOVE_LIKE_API_PATH, _LikeEndpoint_data;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { YTNode } from '../../helpers.js';
class LikeEndpoint extends YTNode {
    constructor(data) {
        super();
        _LikeEndpoint_LIKE_API_PATH.set(this, 'like/like');
        _LikeEndpoint_DISLIKE_API_PATH.set(this, 'like/dislike');
        _LikeEndpoint_REMOVE_LIKE_API_PATH.set(this, 'like/removelike');
        _LikeEndpoint_data.set(this, void 0);
        __classPrivateFieldSet(this, _LikeEndpoint_data, data, "f");
    }
    getApiPath() {
        return __classPrivateFieldGet(this, _LikeEndpoint_data, "f").status === 'DISLIKE' ?
            __classPrivateFieldGet(this, _LikeEndpoint_DISLIKE_API_PATH, "f") : __classPrivateFieldGet(this, _LikeEndpoint_data, "f").status === 'INDIFFERENT' ?
            __classPrivateFieldGet(this, _LikeEndpoint_REMOVE_LIKE_API_PATH, "f") : __classPrivateFieldGet(this, _LikeEndpoint_LIKE_API_PATH, "f");
    }
    buildRequest() {
        const request = {};
        if (__classPrivateFieldGet(this, _LikeEndpoint_data, "f").target)
            request.target = __classPrivateFieldGet(this, _LikeEndpoint_data, "f").target;
        const params = this.getParams();
        if (params)
            request.params = params;
        return request;
    }
    getParams() {
        switch (__classPrivateFieldGet(this, _LikeEndpoint_data, "f").status) {
            case 'LIKE':
                return __classPrivateFieldGet(this, _LikeEndpoint_data, "f").likeParams;
            case 'DISLIKE':
                return __classPrivateFieldGet(this, _LikeEndpoint_data, "f").dislikeParams;
            case 'INDIFFERENT':
                return __classPrivateFieldGet(this, _LikeEndpoint_data, "f").removeLikeParams;
            default:
                return undefined;
        }
    }
}
_LikeEndpoint_LIKE_API_PATH = new WeakMap(), _LikeEndpoint_DISLIKE_API_PATH = new WeakMap(), _LikeEndpoint_REMOVE_LIKE_API_PATH = new WeakMap(), _LikeEndpoint_data = new WeakMap();
LikeEndpoint.type = 'LikeEndpoint';
export default LikeEndpoint;
